import matplotlib.pyplot as plt
from matplotlib.ticker import LogFormatter, LogLocator
from matplotlib import rc
import numpy as np
from decimal import *

# data1, data2: lists of non-zero integers all of which are greater than or equal
#               to 0.01 
# outname: prefix of output filename
def loglogscatter_plot(data1, data2, outname):
    plt.xlabel('Newton-tensor-BDD')
    plt.ylabel('Newton-tensor-NWAOBDD')

    base = 10
    largest = max(max(data2), max(data1))
    plt.xlim(0.01,largest)
    plt.ylim(0.01,largest)

    plt.loglog( [0.01, largest], [0.02, 2*largest],'k:', basex=base, basey=base, nonposx='clip', nonposy='clip')
    plt.loglog( [0.01,largest], [0.01, largest], 'k',basex=base, basey=base, nonposx='clip', nonposy='clip')
    plt.loglog(  [0.02, 2*largest], [0.01, largest], 'k--',basex=base, basey=base, nonposx='clip', nonposy='clip')
    
    plt.legend(( '$y=2x$','$x=y$','$x/2=y$'), 'upper left', prop={'size':12})
    plt.text(0.007, 0.007, '$\leq$ 0.01')

    plt.text(0.007, 0.007, '$\leq$ 0.01')

    plt.loglog(data1, data2, basex=10, basey=10, marker='x', linestyle='none')

    cas = plt.gca()
    
    xmajorLocator = LogLocator(base)
    xmajorFormatter = LogFormatter(base)
    xminorLocator = LogLocator(base)

    cas.xaxis.set_major_locator(xmajorLocator)
    cas.xaxis.set_major_formatter(xmajorFormatter)
    
    ymajorLocator = LogLocator(base)
    yminorLocator = LogLocator(base)
    ymajorFormatter = LogFormatter(base)


    cas.yaxis.set_major_locator(ymajorLocator)
    cas.yaxis.set_major_formatter(ymajorFormatter)
    plt.grid(True)
    
    plt.savefig(outname+'.eps', format='eps')
    plt.savefig(outname+'.png', format='png')
    plt.clf()
    return

if __name__ == '__main__':
    getcontext().prec = 7
    rc('text', usetex=True)
    plt.figure(figsize=(10,10))
    #bdd no newton
    data1 = np.array([0.0294312,0.0516673,0.0801517,0.0738483,0.124628,0.114693,0.0796921,2.56346,0.214327,0.123825,0.117066,0.0417772,2.54452,0.106058,4.89383,0.126827,0.75076,0.0811848,0.0914316,0.0793017,0.072143,0.0830665,1.68965,0.453132,1.66372,14.0619,4.79399,2.99362,5.95554,0.106441,0.0759594,0.0774886,0.0973437,0.114146,0.0695386,0.0790426,0.506277,4.99541,2.79275,5.53602,0.295233,0.244585,0.0780066,0.733175,0.799928,0.750249,0.311014,0.0779024,0.81068,0.822238,1.38097,0.842044,0.3728,0.382605,0.247669,0.364521,2.17579,37.4621,0.180688,0.243963,0.0853347,0.739729,0.327085,0.337948,0.332783,3.28834,142.01,0.228198,3.70602,0.845032,0.274359,39.6569,1.24635,1.83096,14.7335,0.225984,2.23658,0.230804,2.40573,0.3639,0.261018,0.374781,0.129035,4.55497,0.261119,13.086,12.6752,0.408459,0.337317,1.95601,0.153194,0.256612,9.54543,0.11751,0.111431,0.115166,0.4265,0.33673,0.481225,2.07264,0.182172,0.0660788,0.0892583,0.0943522,0.0932918,0.100361,0.0863309,0.0662322,0.0283663,0.0964815,0.116525,0.680658,0.165774,0.159506,1.48714,0.182607,1.5304,0.244235,1.4815,1.52391,2.76142,0.207017,0.072404,0.203277,3.23136,0.324666,0.226785,0.351176,0.175959,0.474951,0.492509,0.536072,0.177279,0.160331,0.161548,0.172512,0.170342,0.153316,109.878,4.10276,0.347888,0.199867,0.158476,0.383161,0.224472,0.199546,1.24158,0.141169,0.435746,0.434286,0.404352,0.449534,1.98289,0.316457,0.312075,0.282372,1.06809,0.267413])
    #bdd w/ newton
    data2 = np.array([0.0015453,0.00251455,0.00292958,0.00264477,0.0020636,0.0021749,0.00345013,0.00329554,0.00287538,0.00191606,0.00249242,0.00177077,0.00473628,0.0032609,0.0053261,0.00184165,0.00536171,0.00254951,0.00231858,0.00232628,0.0023885,0.00235322,0.002885,0.00318745,0.00631813,0.00988822,0.0250204,0.0245288,0.0249005,0.0242276,0.0233847,0.0214513,0.0220601,0.023342,0.0211216,0.0252546,0.0213124,0.0281665,0.0283035,0.0284205,0.0427471,0.0355315,0.0108418,300,300,300,300,0.0110095,300,300,300,300,0.0151168,0.0160816,0.0150261,0.0170595,0.0156476,0.0211941,0.0466296,0.0257507,0.0260311,0.0241506,0.059168,0.0540382,0.0530417,0.0332085,300,0.0508969,0.0313947,0.0369806,0.061696,0.0566057,0.0569007,0.00762865,0.0128765,0.00595346,0.0102494,0.00672899,0.016138,0.0125971,0.0112257,0.0131052,0.0096265,0.0213471,0.00819988,0.00821367,0.0111429,0.0158141,0.0184361,0.0103318,0.0160165,0.00769953,0.0125028,0.0316336,0.0294119,0.0316673,0.0219962,0.0207794,0.0232394,0.0155841,0.0189194,0.0185217,0.0201167,0.0208701,0.0243187,0.0224453,0.0255436,0.0182995,0.0102612,0.0217265,0.0323101,0.0155886,0.0371855,0.0361528,0.0391379,0.0573732,0.0396388,0.0404128,0.0434536,0.0401478,0.0187427,0.0381728,0.0187376,0.0386369,0.0426284,0.0148298,0.0384464,0.061884,0.0375265,0.0855657,0.0809898,0.0818266,0.0320156,0.0352114,0.0355094,0.0312007,0.0354908,0.0334923,0.0336976,0.0357281,0.0370075,0.0308559,0.0313245,0.0333246,0.0399493,0.0397296,0.0434161,0.0298603,0.0133355,0.014918,0.0157968,0.014433,0.0339901,0.014212,0.0431281,0.0425662,0.0516073,0.0435945])
    #nwaobdd no newton
    data3 = np.array([0.0279459,0.0710579,0.0682137,0.12294,0.120025,0.121399,0.0284388,0.0516086,0.272874,0.271749,0.267736,0.0716041,0.134454,0.225466,0.129928,0.126934,0.107889,0.0740545,0.0738445,0.0795426,0.240119,0.0804464,0.408987,0.0771608,0.0807505,0.0688564,0.236022,0.113043,0.201318,0.243919,0.257458,0.250771,0.0422047,0.379706,0.431124,0.435718,0.386543,0.096002,0.431429,0.22401,0.111779,0.650372,0.369158,0.370809,0.364547,0.309295,2.32869,0.43036,2.00723,0.682277,0.685265,2.06117,2.13352,1.79449,2.31913,2.40063,1.55774,1.58214,2.00313,1.38858,2.63082,16.4491,0.354497,4.70431,2.63107,44.6859,41.8012,3.35105,0.354384,0.438193,15.4561,4.79119,4.33376,0.0741078,4.97389,2.7203,6.01056,0.114466,0.0770749,0.0983023,0.110397,0.121083,0.084979,0.526364,5.32564,2.77885,5.97642,0.203214,0.193229,0.0786,0.85842,0.855828,0.966101,0.345231,1.02248,0.697048,1.57716,1.03539,0.170869,0.239832,0.104053,0.294484,0.307664,0.279523,189.679,0.221784,3.81007,0.696132,0.246988,1.23571,9.03015,10.1552,0.395553,0.303435,0.158935,10.202,0.331873,0.500059,0.172592,0.0909678,0.0976695,0.0987696,0.0977144,0.0870516,0.069309,0.0939551,0.114439,0.181757,0.164683,1.46891,0.251901,1.53414,0.234566,1.66456,0.177266,0.076672,0.27094,3.2788,0.316302,0.217529,0.346548,0.19634,0.479699,0.484216,0.470331,0.166952,0.19046,0.173752,0.163968,0.232164,0.172997,123.61,0.157591,0.161009,0.186854,0.0997001,2.15064,0.941746])
    #nwaobdd newton
    data4 = np.array([0.0287952,0.0314569,0.0469455,0.0941671,0.0955164,0.0974235,0.194311,0.216956,0.221019,0.221396,0.224466,0.2577,0.407508,0.65054,0.664355,0.676413,0.693137,0.722311,0.728237,0.742373,0.742637,0.748516,0.752182,0.752224,0.783149,0.862999,1.04477,1.06337,1.12213,1.2513,1.26603,1.27245,1.28985,1.29163,1.30846,1.31032,1.31051,1.31182,1.33062,1.38553,1.57064,1.63762,1.6534,1.70142,1.89232,1.89257,1.90317,2.31475,2.73064,2.76322,3.33156,3.93407,4.33268,4.34745,5.09145,6.16746,6.27569,8.95883,9.07119,17.1186,17.7811,20.497,24.122,24.7558,30.7889,30.8446,34.2768,35.7943,47.5801,80.6753,132.968,215.559,326.661,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400])
    #loglogscatter_plot(data1, data2, 'Kleene-WPDS vs Kleen-FWPDS')
    #loglogscatter_plot(data1, data3, 'wpdsdirect')
    #loglogscatter_plot(data1, data4, 'wpdsbdd')
    #loglogscatter_plot(data2, data3, 'Kleene-FWPDS vs Newton-notensor-WPDS')
    #loglogscatter_plot(data1, data2, 'No-Newton-FWPDS-BDD vs Newton-tensor-BDD')
    #loglogscatter_plot(data3, data4, 'No-Newton-NWAOBDD vs Newton-tensor-NWAOBDD')
    #loglogscatter_plot(data1, data3, 'No-Newton-FWPDS-BDD vs No-Newton-FWPDS-NWAOBDD')
    loglogscatter_plot(data2, data4, 'Newton-tensor-BDD vs Newton-tensor-NWAOBDD')
    #loglogscatter_plot(data3, data4, 'directbdd')
    #loglogscatter_plot(data4, data5, 'Newton-tensor-FWPDS-BDD vs Newton-tensor-FWPDS-nwa')

